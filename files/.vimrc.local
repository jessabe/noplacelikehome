UnBundle 'airblade/vim-gitgutter'
UnBundle 'spf13/vim-autoclose'
UnBundle 'AutoClose'
UnBundle 'numbers.vim'
Plugin 'vim-erlang/vim-erlang-compiler'
Plugin 'vim-erlang/vim-erlang-runtime'
Plugin 'Yggdroot/indentLine'
Plugin 'benmills/vimux'
Plugin 'kana/vim-fakeclip'
Plugin 'Konfekt/FastFold'
Plugin 'Konfekt/FoldText'

autocmd BufReadPost,FileReadPost,BufNewFile * call system("tmux rename-window " . expand("%:t"))

set nonumber
set guifont=DejaVu\ Sans\ Mono\ for\ Powerline:h11j
set nu!
set spell!

set timeoutlen=1000  ttimeoutlen=0
set ttimeoutlen=10
augroup FastEscape
	autocmd!
	au InsertEnter * set timeoutlen=0
	au InsertLeave * set timeoutlen=1000
augroup END

let g:neocomplcache_disable_auto_complete = 1
let g:indent_guides_auto_colors = 0
let g:indent_guides_enable_on_vim_startup = 0
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  ctermbg=8
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=0

set foldmethod=indent
autocmd FileType c,cpp,h,hpp setlocal foldmethod=syntax
set foldenable
nnoremap <space> za
set nofoldenable " don't fold by default
set foldlevel=1

" vimux
" Prompt for a command to run map
map <Leader>vp :VimuxPromptCommand<CR>
" Run last command executed by VimuxRunCommand
map <Leader>vl :VimuxRunLastCommand<CR>

"set tags=~/.vim/tags/stdlibcpp
"set runtimepath^=~/.vim/bundle/vim-erlang-runtime/
"
set wrap linebreak nolist
set ttyfast
set colorcolumn=80
set list
set clipboard=unnamed
set tags=./tags;/

highlight LineNr ctermfg=233 ctermbg=237
highlight CursorLineNr ctermfg=202 ctermbg=237

let g:indentLine_color_gui = '#A4E001'
let g:indentLine_char = 'â”†'
let g:AutoPairs = {}

" Erlang
set runtimepath^=~/.vim/bundle/vim-erlang-runtime/
" this should reflect the kerl setting
set runtimepath^=/usr/local/erlang/R16B03-1/bin/erl

let g:syntastic_auto_loc_list = 1

"let g:airline_section_a =      '(mode, crypt, paste, spell, iminsert)'
"let g:airline_section_b =      (hunks, branch)
"let g:airline_section_c =      (bufferline or filename)
"let g:airline_section_gutter=  (readonly, csv)
"let g:airline_section_x       (tagbar, filetype, virtualenv)
let g:airline_section_y ='' "      (fileencoding, fileformat)
"let g:airline_section_z       (percentage, line number, column number)
"let g:airline_section_error   (ycm_error_count, syntastic, eclim)
"let g:airline_section_warning (ycm_warning_count, whitespace)

set tabstop=2
set expandtab

" filetype specifc
autocmd FileType erlang setlocal shiftwidth=2 tabstop=2
autocmd FileType python setlocal shiftwidth=2 tabstop=2 noexpandtab
